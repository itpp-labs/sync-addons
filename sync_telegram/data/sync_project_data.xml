<?xml version='1.0' encoding='UTF-8'?>
<!-- Copyright 2021 ilya ilchenko
     License MIT (https://opensource.org/licenses/MIT). -->
<odoo>
  <record id="telegram_project" model="sync.project">
    <field name="name">Telegram Integration module</field>
    <field name="active" eval="True"/>
    <field name="eval_context">telegram</field>
    <field name="common_code"><![CDATA[

def user2name(user):
    name = user.first_name
    if user.last_name:
        name += ' %s' % user.last_name
    if user.username:
        name += ' (@%s)' % user.username
    return name

def html_sanitize_telegram(html):
    allowed_tags = set({"b", "i", "u", "s", "a", "code", "pre"})
    cleaner = Cleaner(safe_attrs_only=True, safe_attrs=set(), allow_tags=allowed_tags, remove_unknown_tags=False)
    html = cleaner.clean_html(html)
    # remove surrounding div
    return html[5:-6]

        ]]></field>
  </record>
  <record id="telegram_project_secret" model="sync.project.secret">
    <field name="key">TELEGRAM_BOT_TOKEN</field>
    <field name="description">Authentication token provided by https://t.me/BotFather</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_welcome" model="sync.project.param">
    <field name="key">TELEGRAM_WELCOME_MESSAGE</field>
    <field name="value">Hello! How can I help you?</field>
    <field name="description">
            Message that is sent to a user on first bot usage
        </field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_message_sent" model="sync.project.param">
    <field name="key">TELEGRAM_MESSAGE_SENT</field>
    <field name="value">The message has sent in telegram:</field>
    <field name="description">
            When Odoo Bot reports on successfully sent telegram message
        </field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_prefix" model="sync.project.param">
    <field name="key">PARTNER_NAME_PREFIX</field>
    <field name="value">Telegram:</field>
    <field name="description">Prefix for new partner name</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_model" model="sync.project.param">
    <field name="key">MODEL</field>
    <field name="value">crm.lead</field>
    <field name="description">
            What model are creating by telegram user. (e.g. crm.lead, res.partner, etc)
        </field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_mail_chat" model="sync.project.param">
    <field name="key">MAIL_CHAT</field>
    <field name="value">1</field>
    <field name="description"></field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>

  <record id="telegram_task_setup" model="sync.task">
    <field name="name">Setup</field>
    <field name="active" eval="True"/>
    <field name="project_id" ref="telegram_project"/>
    <field name="code"><![CDATA[

def handle_button():
    telegram.setWebhook(webhooks.TELEGRAM, allowed_updates=["message", "edited_message"])

        ]]></field>
  </record>

    <record id="telegram_task_tele2odoo" model="sync.task">
    <field name="name">Process Telegram Messages</field>
    <field name="active" eval="True"/>
    <field name="project_id" ref="telegram_project"/>
    <field name="code"><![CDATA[
def handle_webhook(httprequest):
  data = json.loads(httprequest.data.decode("utf-8"))
  log("Raw data: %s" % data, LOG_DEBUG)

  MODEL = params.MODEL

  update = telegram.parse_data(data)
  message = update.message or update.edited_message
  is_edit = bool(update.edited_message)
  name = "%s%s" % (params.PARTNER_NAME_PREFIX, user2name(message.from_user))
  odoo_message_text = ""                                                       #From Telegram:
  odoo_message_text = "%s\n\n%s" % (odoo_message_text, message.text)
  
  user_ref = "%s@telegram" % message.from_user.id
  partner = env["res.partner"].search([("ref", "=", user_ref)])
  
  odoobot_id = env.user.browse(1).partner_id.id
  

  if not partner:
    partner = env["res.partner"].create({"name": name, "ref": user_ref})
    

  if params.MAIL_CHAT == "1":
    if message.text == "/start":
        telegram.sendMessage(message.chat.id, params.TELEGRAM_WELCOME_MESSAGE)
        log("User started a bot!" , LOG_INFO)
        
    elif is_edit:
        odoo_message_text = "Contact has edited the message:"
  
      
    channel = env["mail.channel"].with_user(odoobot_id).channel_get(partners_to=[partner.id], pin=True)
    log("Channel info is: %s" % channel, LOG_INFO)
    channel =  env['mail.channel'].browse(channel['id'])

    if MODEL is not "res.partner":
      if not env[MODEL].search([("name", "=", name)]):
        current_model = env[MODEL].create({"name": name, 'partner_id': partner.id})
        
        channel.message_post(body="""<b> <a href="/web#id=%s&model=%s">User card is created. </a></b>""" % (current_model.id, MODEL), 
        author_id=odoobot_id, message_type="comment", subtype_xmlid="mail.mt_comment")
        
        
    channel.message_post(body=odoo_message_text, author_id=partner.id, 
    message_type="comment", subtype_xmlid="mail.mt_comment")
        ]]></field>
  </record>



  <record id="telegram_trigger_button" model="sync.trigger.button">
    <field name="trigger_name">SETUP_TELEGRAM</field>
    <field name="name"></field>
    <field name="sync_task_id" ref="telegram_task_setup"/>
  </record>
  
 <record id="telegram_trigger_webhook" model="sync.trigger.webhook">
    <field name="trigger_name">TELEGRAM</field>
    <field name="active" eval="True"/>
    <field name="name">Telegram updates</field>
    <field name="sync_task_id" ref="telegram_task_tele2odoo"/>
    <field name="webhook_type">json</field>
  </record>

</odoo>
