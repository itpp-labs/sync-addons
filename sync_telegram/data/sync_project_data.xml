<?xml version='1.0' encoding='UTF-8'?>
<!-- Copyright 2021 Ilya Ilchenko
     License MIT (https://opensource.org/licenses/MIT). -->
<odoo>
  <record id="telegram_project" model="sync.project">
    <field name="name">Telegram Integration</field>
    <field name="active" eval="True"/>
    <field name="eval_context">telegram</field>
    <field name="common_code"><![CDATA[
TG_PARTNER_REL = "TG_PARTNER_REL"
RECORD_MODEL_REL = "RECORD_MODEL_REL"
CHANNEL_REL = "CHANNEL_REL"

operators_user_list = list(map(int, params.OPERATORS_ID.split(",")))
operators_partner_list = [env.user.browse(x).partner_id.id for x in operators_user_list]

def user2name(user):
    name = user.first_name
    if user.last_name:
        name += ' %s' % user.last_name
    if user.username:
        name += ' (@%s)' % user.username
    return name

def html_sanitize_telegram(html):
    allowed_tags = set({"b", "i", "u", "s", "a", "code", "pre"})
    cleaner = Cleaner(safe_attrs_only=True, safe_attrs=set(), allow_tags=allowed_tags, remove_unknown_tags=False)
    html = cleaner.clean_html(html)
    # remove surrounding div
    return html[5:-6]

        ]]></field>
  </record>
  <record id="telegram_project_secret" model="sync.project.secret">
    <field name="key">TELEGRAM_BOT_TOKEN</field>
    <field name="description">Authentication token provided by https://t.me/BotFather</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_welcome" model="sync.project.param">
    <field name="key">TELEGRAM_WELCOME_MESSAGE</field>
    <field name="value">Hello! How can I help you?</field>
    <field name="description">
            Message that is sent to a user on first bot usage
        </field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_message_sent" model="sync.project.param">
    <field name="key">TELEGRAM_MESSAGE_SENT</field>
    <field name="value">The message has sent in telegram:</field>
    <field name="description">
            When Odoo Bot reports on successfully sent telegram message
        </field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_prefix" model="sync.project.param">
    <field name="key">PARTNER_NAME_PREFIX</field>
    <field name="value">Telegram: </field>
    <field name="description">Prefix for new partner name</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="record-name-prefix_project-parameter" model="sync.project.param">
    <field name="key">RECORD_NAME_PREFIX</field>
    <field name="value">Lead: </field>
    <field name="description">Prefix for new record name</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_model" model="sync.project.param">
    <field name="key">RECORD_MODEL</field>
    <field name="value">crm.lead</field>
    <field name="description">What model are creating by telegram user. (e.g. crm.lead, res.partner, etc)</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_mail_chat" model="sync.project.param">
    <field name="key">MAIL_CHAT</field>
    <field name="value">True</field>
    <field name="description">A switch that turns on chat with a partner</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>
  <record id="telegram_project_param_operator_id" model="sync.project.param">
    <field name="key">OPERATORS_ID</field>
    <field name="value">2,6</field>
    <field name="description">res.users.id</field>
    <field name="url" eval=""/>
    <field name="project_id" ref="telegram_project"/>
  </record>

  <record id="telegram_task_setup" model="sync.task">
    <field name="name">Setup</field>
    <field name="active" eval="True"/>
    <field name="project_id" ref="telegram_project"/>
    <field name="code"><![CDATA[

def handle_button():
    telegram.setWebhook(webhooks.TELEGRAM, allowed_updates=["message", "edited_message"])

        ]]></field>
  </record>

    <record id="telegram_task_tele2odoo" model="sync.task">
    <field name="name">Process Telegram Messages</field>
    <field name="active" eval="True"/>
    <field name="project_id" ref="telegram_project"/>
    <field name="code"><![CDATA[
def handle_webhook(httprequest):
  data = json.loads(httprequest.data.decode("utf-8"))
  log("Raw data: %s" % data, LOG_DEBUG)

  update = telegram.parse_data(data)
  message = update.message or update.edited_message
  odoo_message_text = message.text
  name = "%s%s" % (params.PARTNER_NAME_PREFIX, user2name(message.from_user))
  record_name = "%s%s" % (params.RECORD_NAME_PREFIX, user2name(message.from_user))
  
  telegram_user_ref =  message.from_user.id
  odoobot = env.user.browse(1).partner_id.id
  main_operator = env.user.browse(operators_user_list[0])
  log("main_operator: %s" % main_operator, LOG_INFO)

  partner_link = get_link(TG_PARTNER_REL, telegram_user_ref)
  
  if not partner_link: 
    partner = env["res.partner"].with_user(main_operator).create({"name": name})
    partner.set_link(TG_PARTNER_REL, telegram_user_ref, sync_date=None, allow_many2many=False)
    partner_link = get_link(TG_PARTNER_REL, telegram_user_ref)
    
  if bool(params.MAIL_CHAT):
    if message.text == "/start":
      telegram.sendMessage(message.chat.id, params.TELEGRAM_WELCOME_MESSAGE)
    elif bool(update.edited_message):
      odoo_message_text = "Contact has edited the message:"
  
    partners_to = [partner_link.odoo.id] + operators_partner_list
    log("partners_to: %s" % partners_to, LOG_INFO)
    
    channel = env["mail.channel"].with_user(main_operator).channel_get(partners_to=partners_to, pin=True)
    log("Channel info is: %s" % channel, LOG_INFO)
    channel = env['mail.channel'].browse(channel["id"])
    channel.set_link(CHANNEL_REL, telegram_user_ref, sync_date=None, allow_many2many=False)
    
    if params.RECORD_MODEL != "res.partner":
      record_model_link = get_link(RECORD_MODEL_REL, telegram_user_ref)

      if not record_model_link:
        record_model = env[params.RECORD_MODEL].with_user(main_operator).create({"name": record_name, "partner_id": partner_link.odoo.id})
        record_model.set_link(RECORD_MODEL_REL, telegram_user_ref, sync_date=None, allow_many2many=False)

        record_model.message_post(body="""<b><a href="/web#action=%s&active_id=mail.channel_%s">Chat with partner is created. </a></b>""" % 
        (env.ref("mail.action_discuss").id, channel.id), author_id=odoobot, message_type="comment", subtype_xmlid="mail.mt_comment")

        channel.message_post(body="""<b><a href="/web#id=%s&model=%s">Record is created. </a></b>""" % 
        (record_model.id, record_model._name), author_id=odoobot, message_type="comment", subtype_xmlid="mail.mt_comment")
        
    channel.message_post(body=odoo_message_text, author_id=partner_link.odoo.id, message_type="comment", subtype_xmlid="mail.mt_comment")


        ]]></field>
  </record>
  <record id="telegram_trigger_button" model="sync.trigger.button">
    <field name="trigger_name">SETUP_TELEGRAM</field>
    <field name="name"></field>
    <field name="sync_task_id" ref="telegram_task_setup"/>
  </record>
  
 <record id="telegram_trigger_webhook" model="sync.trigger.webhook">
    <field name="trigger_name">TELEGRAM</field>
    <field name="active" eval="True"/>
    <field name="name">Telegram updates</field>
    <field name="sync_task_id" ref="telegram_task_tele2odoo"/>
    <field name="webhook_type">json</field>
  </record>

</odoo>
